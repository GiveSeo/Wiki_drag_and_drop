name: Generate PDF from Wiki

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  repository_dispatch:
    types: [wiki-updated]
  push:
    branches:
      - master

jobs:
  build-pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Clone Wiki repository
        run: |
          git clone https://${{ secrets.GH_PAT }}@github.com/GiveSeo/Wiki_drag_and_drop.wiki.git wiki
          cd wiki
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Cache LaTeX packages
        uses: actions/cache@v3
        with:
          path: |
            /usr/share/texlive
            /usr/share/texmf
          key: ${{ runner.os }}-texlive-${{ hashFiles('**/*.md') }}
          restore-keys: |
            ${{ runner.os }}-texlive-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            pandoc \
            texlive-xetex \
            texlive-fonts-recommended \
            texlive-lang-cjk \
            texlive-latex-extra \
            texlive-lang-chinese \
            texlive-lang-korean \
            lmodern \
            fonts-noto-cjk \
            fonts-noto-cjk-extra
          fc-list :lang=ko family | head -10
          echo "✅ Dependencies installed"

      - name: Merge Wiki files and download images
        run: |
          cd wiki
          echo "# Wiki Documentation" > combined.md
          echo "" >> combined.md
          echo "---" >> combined.md
          echo "" >> combined.md
          mkdir -p downloaded_images
          find . -name "*.md" ! -name "combined.md" ! -path "./.git/*" -print0 | sort -z | while IFS= read -r -d '' file; do
            echo "" >> combined.md
            echo "---" >> combined.md
            echo "" >> combined.md
            filename=$(basename "$file" .md)
            echo "# 📄 $filename" >> combined.md
            echo "" >> combined.md
            cat "$file" >> combined.md
          done
          grep -oP '!\[.*?\]\(\K(https?://[^)]+)' combined.md | sort -u | while read -r url; do
            filename=$(echo "$url" | md5sum | cut -d' ' -f1)
            extension="${url##*.}"
            [ ${#extension} -gt 4 ] && extension="jpg"
            curl -L -s --max-time 10 "$url" -o "downloaded_images/${filename}.${extension}" || true
            [ -f "downloaded_images/${filename}.${extension}" ] && sed -i "s|$url|downloaded_images/${filename}.${extension}|g" combined.md
          done

      - name: Generate PDF
        run: |
          cd wiki
          fc-cache -fv
          echo "📝 설치된 Noto 폰트:"
          fc-list | grep -i "noto.*cjk.*kr" | cut -d: -f2 | sort -u
          
          # 모든 문제 해결을 위한 LaTeX 헤더 생성
          cat > header.tex << 'EOF'
          % ========================================
          % 1. 한글 및 특수문자 지원 패키지
          % ========================================
          \usepackage{fontspec}
          \usepackage{xeCJK}
          \usepackage[utf8]{inputenc}
          
          % 한글 폰트 설정 (모든 한글 문자 지원)
          \setCJKmainfont{Noto Sans CJK KR}[
            UnicodeRange={AC00-D7A3},
            BoldFont=Noto Sans CJK KR Bold,
            AutoFakeSlant=0.2
          ]
          \setCJKsansfont{Noto Sans CJK KR}
          \setCJKmonofont{Noto Sans Mono CJK KR}
          
          % ========================================
          % 2. 코드 블록 줄바꿈 패키지
          % ========================================
          \usepackage{fvextra}
          \usepackage{listings}
          \usepackage{xcolor}
          \usepackage{seqsplit}
          \usepackage{xurl}
          
          % ========================================
          % 3. 이미지 크기 및 위치 제어 패키지
          % ========================================
          \usepackage{graphicx}
          \usepackage{float}
          \usepackage{adjustbox}
          
          % 이미지 최대 크기 설정 (페이지 폭의 90%, 높이의 60%)
          \setkeys{Gin}{width=0.9\textwidth,height=0.6\textheight,keepaspectratio}
          
          % 이미지 위치를 현재 위치에 고정
          \let\origfigure\figure
          \let\endorigfigure\endfigure
          \renewenvironment{figure}[1][htbp]{
            \origfigure[H]
            \centering
          }{
            \endorigfigure
          }
          
          % 이미지를 자동으로 조정 가능하게 래핑
          \let\oldincludegraphics\includegraphics
          \renewcommand{\includegraphics}[2][]{%
            \adjustbox{max width=0.9\textwidth,max height=0.6\textheight,keepaspectratio}{%
              \oldincludegraphics[#1]{#2}%
            }%
          }
          
          % ========================================
          % 4. 코드 블록 설정 (매우 적극적인 줄바꿈)
          % ========================================
          
          % 기본 Verbatim 환경 설정
          \fvset{
            breaklines=true,
            breakanywhere=true,
            breakautoindent=false,
            breaksymbolleft={},
            breaksymbolright={},
            fontsize=\tiny,
            baselinestretch=0.9,
            xleftmargin=0pt,
            xrightmargin=0pt
          }
          
          % Highlighting 환경 (구문 강조 코드용)
          \DefineVerbatimEnvironment{Highlighting}{Verbatim}{
            breaklines=true,
            breakanywhere=true,
            breakautoindent=false,
            breaksymbolleft={},
            breaksymbolright={},
            commandchars=\\\{\},
            fontsize=\tiny,
            baselinestretch=0.9,
            xleftmargin=0pt,
            xrightmargin=0pt
          }
          
          % verbatim 환경
          \RecustomVerbatimEnvironment{verbatim}{Verbatim}{
            breaklines=true,
            breakanywhere=true,
            breakautoindent=false,
            breaksymbolleft={},
            breaksymbolright={},
            fontsize=\tiny,
            baselinestretch=0.9,
            xleftmargin=0pt,
            xrightmargin=0pt
          }
          
          % ========================================
          % 5. 인라인 코드 줄바꿈 설정
          % ========================================
          
          % URL 스타일 줄바꿈 (모든 특수문자에서 줄바꿈 허용)
          \def\UrlBreaks{\do\/\do:\do-\do_\do.\do,\do*\do(\do)\do[\do]\do<\do>\do|\do'\do$\do=\do\{\do\}}
          
          % 인라인 코드 재정의 (모든 특수문자 위치에서 줄바꿈)
          \makeatletter
          \let\oldtexttt\texttt
          \renewcommand{\texttt}[1]{%
            \begingroup
            \tiny
            \hyphenchar\font=`\-
            \oldtexttt{%
              \begingroup
              \lccode`~=`.\lowercase{\endgroup\def~}{.\discretionary{}{}{}}%
              \lccode`~=`*\lowercase{\endgroup\def~}{*\discretionary{}{}{}}%
              \lccode`~=`:\lowercase{\endgroup\def~}{:\discretionary{}{}{}}%
              \lccode`~=`_\lowercase{\endgroup\def~}{_\discretionary{}{}{}}%
              \lccode`~=`-\lowercase{\endgroup\def~}{-\discretionary{}{}{}}%
              \lccode`~=`/\lowercase{\endgroup\def~}{/\discretionary{}{}{}}%
              \lccode`~=`(\lowercase{\endgroup\def~}{(\discretionary{}{}{}}%
              \lccode`~=`)\lowercase{\endgroup\def~}{)\discretionary{}{}{}}%
              \lccode`~=`[\lowercase{\endgroup\def~}{[\discretionary{}{}{}}%
              \lccode`~=`]\lowercase{\endgroup\def~}{]\discretionary{}{}{}}%
              \lccode`~=`'\lowercase{\endgroup\def~}{'\discretionary{}{}{}}%
              \lccode`~=`$\lowercase{\endgroup\def~}{\$\discretionary{}{}{}}%
              \lccode`~=`=\lowercase{\endgroup\def~}{=\discretionary{}{}{}}%
              \lccode`~=`,\lowercase{\endgroup\def~}{,\discretionary{}{}{}}%
              \lccode`~=`;\lowercase{\endgroup\def~}{;\discretionary{}{}{}}%
              \catcode`.=\active
              \catcode`*=\active
              \catcode`:=\active
              \catcode`_=\active
              \catcode`-=\active
              \catcode`/=\active
              \catcode`(=\active
              \catcode`)=\active
              \catcode`[=\active
              \catcode`]=\active
              \catcode`'=\active
              \catcode`$=\active
              \catcode`==\active
              \catcode`,=\active
              \catcode`;=\active
              \scantokens{#1\noexpand}%
            }%
            \endgroup
          }
          \makeatother
          
          % ========================================
          % 6. 페이지 레이아웃 최적화
          % ========================================
          \usepackage{microtype}
          \usepackage[hang,flushmargin]{footmisc}
          
          % 단락 간격 및 들여쓰기
          \setlength{\parskip}{0.4\baselineskip}
          \setlength{\parindent}{0pt}
          
          % 페이지 나누기 최적화
          \widowpenalty=10000
          \clubpenalty=10000
          \raggedbottom
          
          % 더 나은 줄바꿈을 위한 설정
          \tolerance=9999
          \emergencystretch=3em
          \hyphenpenalty=10000
          \exhyphenpenalty=100
          EOF
          
          pandoc combined.md \
            --pdf-engine=xelatex \
            --listings \
            -V 'mainfont:Noto Serif CJK KR' \
            -V 'sansfont:Noto Sans CJK KR' \
            -V 'monofont:Noto Sans Mono CJK KR' \
            -V 'CJKmainfont:Noto Sans CJK KR' \
            -V fontsize=9pt \
            -V geometry:margin=1cm \
            -V geometry:top=1.5cm \
            -V geometry:bottom=1.5cm \
            -V linestretch=1.1 \
            -V documentclass=article \
            --toc \
            --toc-depth=3 \
            -H header.tex \
            -o combined.pdf

      - name: Commit PDF to repository
        run: |
          mv wiki/combined.pdf Wiki_전체.pdf
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/GiveSeo/Wiki_drag_and_drop.git
          git fetch origin
          git pull origin HEAD --rebase || true
          git add Wiki_전체.pdf
          if ! git diff --staged --quiet; then
            git commit -m "📄 Update Wiki PDF"
            git push origin HEAD
          fi

      - name: Update Home.md with PDF link
        run: |
          cd wiki
          PDF_URL_RAW="https://github.com/GiveSeo/Wiki_drag_and_drop/raw/master/Wiki_전체.pdf"
          PDF_URL_BLOB="https://github.com/GiveSeo/Wiki_drag_and_drop/blob/master/Wiki_전체.pdf"
          HOME_FILE="Home.md"
          
          # 기존 PDF 다운로드 섹션 완전 제거
          if grep -q "## 📘 PDF 다운로드" "$HOME_FILE"; then
            sed -i '/## 📘 PDF 다운로드/,/^$/d' "$HOME_FILE"
          fi
          
          # 파일 끝에 PDF 다운로드 섹션 추가
          echo "" >> "$HOME_FILE"
          echo "---" >> "$HOME_FILE"
          echo "" >> "$HOME_FILE"
          echo "## 📘 PDF 다운로드" >> "$HOME_FILE"
          echo "" >> "$HOME_FILE"
          echo "전체 Wiki를 PDF로 다운로드할 수 있습니다:" >> "$HOME_FILE"
          echo "" >> "$HOME_FILE"
          echo "- [📥 PDF 다운로드 (Raw)]($PDF_URL_RAW)" >> "$HOME_FILE"
          echo "- [👁️ GitHub에서 보기]($PDF_URL_BLOB)" >> "$HOME_FILE"
          echo "" >> "$HOME_FILE"
          
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/GiveSeo/Wiki_drag_and_drop.wiki.git
          git add "$HOME_FILE"
          if ! git diff --staged --quiet; then
            git commit -m "🔗 Update PDF download link"
            git push origin HEAD:master
          fi
