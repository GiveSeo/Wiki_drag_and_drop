name: Generate PDF from Wiki

on:
  schedule:
    - cron: '0 0 * * *'  # 매일 자정 (UTC)
  workflow_dispatch:
  repository_dispatch:
    types: [wiki-updated]
  push:
    branches:
      - master

jobs:
  build-pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Clone Wiki repository
        run: |
          git clone https://${{ secrets.GH_PAT }}@github.com/GiveSeo/Wiki_drag_and_drop.wiki.git wiki
          cd wiki
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Cache LaTeX packages
        uses: actions/cache@v3
        with:
          path: |
            /usr/share/texlive
            /usr/share/texmf
          key: ${{ runner.os }}-texlive-${{ hashFiles('**/*.md') }}
          restore-keys: |
            ${{ runner.os }}-texlive-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            pandoc \
            texlive-xetex \
            texlive-fonts-recommended \
            texlive-lang-cjk \
            texlive-latex-extra \
            texlive-lang-chinese \
            lmodern \
            fonts-noto-cjk
          
          # 설치된 한글 폰트 확인
          fc-list :lang=ko family | head -5
          echo "✅ Dependencies installed"

      - name: Merge Wiki files and download images
        run: |
          cd wiki
          echo "# Wiki Documentation" > combined.md
          echo "" >> combined.md
          echo "---" >> combined.md
          echo "" >> combined.md
          
          mkdir -p downloaded_images
          
          find . -name "*.md" ! -name "combined.md" ! -path "./.git/*" -print0 | sort -z | while IFS= read -r -d '' file; do
            echo "" >> combined.md
            echo "---" >> combined.md
            echo "" >> combined.md
            cat "$file" >> combined.md
          done
          
          grep -oP '!\[.*?\]\(\K(https?://[^)]+)' combined.md | sort -u | while read -r url; do
            filename=$(echo "$url" | md5sum | cut -d' ' -f1)
            extension="${url##*.}"
            [ ${#extension} -gt 4 ] && extension="jpg"
            curl -L -s --max-time 10 "$url" -o "downloaded_images/${filename}.${extension}" || true
            [ -f "downloaded_images/${filename}.${extension}" ] && sed -i "s|$url|downloaded_images/${filename}.${extension}|g" combined.md
          done

      - name: Generate PDF
        run: |
          cd wiki
          
          # 폰트 캐시 갱신
          fc-cache -fv
          
          # 사용 가능한 Noto 폰트 확인
          echo "📝 설치된 Noto 폰트:"
          fc-list | grep -i "noto.*cjk.*kr" | cut -d: -f2 | sort -u
          
          # LaTeX 템플릿 생성 (ctex 사용 안 함)
          cat > korean-template.tex << 'EOF'
\documentclass[$if(fontsize)$fontsize$,$endif$if(papersize)$papersize$paper,$endif$]{article}
\usepackage{fontspec}
\usepackage{xeCJK}
\setCJKmainfont{Noto Sans CJK KR}
\setmainfont{Noto Sans CJK KR}
\setsansfont{Noto Sans CJK KR}
\setmonofont{Noto Sans Mono CJK KR}
\usepackage{geometry}
\geometry{$if(geometry)$geometry$else$margin=1.5cm$endif$}
\usepackage{hyperref}
\usepackage{graphicx}
\usepackage{longtable}
\usepackage{booktabs}
\setlength{\emergencystretch}{3em}
\providecommand{\tightlist}{\setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}
$if(linestretch)$
\usepackage{setspace}
\setstretch{$linestretch$}
$endif$
\begin{document}
$if(toc)$
\tableofcontents
\newpage
$endif$
$body$
\end{document}
EOF
          
          pandoc combined.md \
            --pdf-engine=xelatex \
            --template=korean-template.tex \
            -V geometry:margin=1.5cm \
            -V linestretch=1.3 \
            --toc \
            --toc-depth=3 \
            -o combined.pdf

      - name: Commit PDF to repository
        run: |
          mv wiki/combined.pdf Wiki_전체.pdf
          
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/GiveSeo/Wiki_drag_and_drop.git
          
          git fetch origin
          git pull origin HEAD --rebase || true
          
          git add Wiki_전체.pdf
          
          if ! git diff --staged --quiet; then
            git commit -m "📄 Update Wiki PDF"
            git push origin HEAD
          fi

      - name: Update Home.md with PDF link
        run: |
          cd wiki
          
          PDF_URL_RAW="https://github.com/GiveSeo/Wiki_drag_and_drop/raw/master/Wiki_전체.pdf"
          PDF_URL_BLOB="https://github.com/GiveSeo/Wiki_drag_and_drop/blob/master/Wiki_전체.pdf"
          HOME_FILE="Home.md"
          
          if grep -q "## 📘 PDF 다운로드" "$HOME_FILE"; then
            sed -i '/## 📘 PDF 다운로드/,/^## /{ /^## 📘 PDF 다운로드/d; /^## /!d; }' "$HOME_FILE"
          fi
          
          echo "" >> "$HOME_FILE"
          echo "## 📘 PDF 다운로드" >> "$HOME_FILE"
          echo "" >> "$HOME_FILE"
          echo "전체 Wiki를 PDF로 다운로드할 수 있습니다:" >> "$HOME_FILE"
          echo "" >> "$HOME_FILE"
          echo "- [📥 PDF 다운로드 (Raw)]($PDF_URL_RAW)" >> "$HOME_FILE"
          echo "- [👁️ GitHub에서 보기]($PDF_URL_BLOB)" >> "$HOME_FILE"
          
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/GiveSeo/Wiki_drag_and_drop.wiki.git
          
          git add "$HOME_FILE"
          
          if ! git diff --staged --quiet; then
            git commit -m "🔗 Update PDF download link"
            git push origin HEAD:master
          fi
