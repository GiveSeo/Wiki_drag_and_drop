name: Generate PDF from Wiki

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  repository_dispatch:
    types: [wiki-updated]
  push:
    branches:
      - master

jobs:
  build-pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Clone Wiki repository
        run: |
          git clone https://${{ secrets.GH_PAT }}@github.com/GiveSeo/Wiki_drag_and_drop.wiki.git wiki
          cd wiki
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Cache LaTeX packages
        uses: actions/cache@v3
        with:
          path: |
            /usr/share/texlive
            /usr/share/texmf
          key: ${{ runner.os }}-texlive-${{ hashFiles('**/*.md') }}
          restore-keys: |
            ${{ runner.os }}-texlive-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            pandoc \
            texlive-xetex \
            texlive-fonts-recommended \
            texlive-lang-cjk \
            texlive-latex-extra \
            texlive-lang-chinese \
            texlive-lang-korean \
            lmodern \
            fonts-noto-cjk \
            fonts-noto-cjk-extra
          echo "‚úÖ Dependencies installed"
          echo "üìù ÏÑ§ÏπòÎêú Noto Ìè∞Ìä∏:"
          fc-list :lang=ko family | head -10

      - name: Merge Wiki files and download images
        run: |
          cd wiki
          echo "üìö Merging wiki files..."
          echo "# Wiki Documentation" > combined.md
          echo "" >> combined.md
          echo "---" >> combined.md
          echo "" >> combined.md
          mkdir -p downloaded_images
          
          find . -name "*.md" ! -name "combined.md" ! -path "./.git/*" -print0 | sort -z | while IFS= read -r -d '' file; do
            echo "" >> combined.md
            echo "---" >> combined.md
            echo "" >> combined.md
            filename=$(basename "$file" .md)
            echo "# üìÑ $filename" >> combined.md
            echo "" >> combined.md
            cat "$file" >> combined.md
          done
          
          echo "üñºÔ∏è  Downloading images..."
          grep -oP '!\[.*?\]\(\K[^)]+' combined.md | grep -E '^https?://' | sort -u | while read -r url; do
            # URLÏóêÏÑú Îî∞Ïò¥Ìëú Ï†úÍ±∞
            clean_url=$(echo "$url" | tr -d '"' | tr -d "'")
            filename=$(echo "$clean_url" | md5sum | cut -d' ' -f1)
            extension="${clean_url##*.}"
            [ ${#extension} -gt 4 ] && extension="jpg"
            
            # User-Agent Ìó§ÎçîÏôÄ Ìï®Íªò Îã§Ïö¥Î°úÎìú
            curl -L -s --max-time 15 \
              -H "User-Agent: Mozilla/5.0" \
              -H "Accept: image/*" \
              "$clean_url" -o "downloaded_images/${filename}.${extension}" || true
            
            if [ -f "downloaded_images/${filename}.${extension}" ] && [ -s "downloaded_images/${filename}.${extension}" ]; then
              # ÏõêÎ≥∏ URL (Îî∞Ïò¥Ìëú Ìè¨Ìï®)ÏùÑ Î°úÏª¨ Í≤ΩÎ°úÎ°ú ÏπòÌôò
              sed -i "s|${url}|downloaded_images/${filename}.${extension}|g" combined.md
              echo "‚úì Downloaded: $clean_url"
            else
              echo "‚úó Failed: $clean_url"
            fi
          done
          
          echo "‚úÖ Wiki files merged"
          ls -lh combined.md

      - name: Generate LaTeX header
        run: |
          cd wiki
          echo "üìù Creating LaTeX header..."
          cat > header.tex << 'EOFHEADER'
          % ========================================
          % 1. ÌïúÍ∏Ä Î∞è ÌäπÏàòÎ¨∏Ïûê ÏßÄÏõê Ìå®ÌÇ§ÏßÄ
          % ========================================
          \usepackage{fontspec}
          \usepackage{xeCJK}
          
          % ÌïúÍ∏Ä Ìè∞Ìä∏ ÏÑ§Ï†ï (UnicodeRange Ï†úÍ±∞)
          \setCJKmainfont{Noto Sans CJK KR}[
            BoldFont=Noto Sans CJK KR Bold
          ]
          \setCJKsansfont{Noto Sans CJK KR}
          \setCJKmonofont{Noto Sans Mono CJK KR}
          
          % Ï∂îÍ∞Ä Ìè∞Ìä∏ ÏÑ§Ï†ï
          \setmainfont{Noto Serif CJK KR}
          \setsansfont{Noto Sans CJK KR}
          \setmonofont{Noto Sans Mono CJK KR}[Scale=0.85]
          
          % ========================================
          % 2. ÏΩîÎìú Î∏îÎ°ù Ï§ÑÎ∞îÍøà Ìå®ÌÇ§ÏßÄ
          % ========================================
          \usepackage{fvextra}
          \usepackage{listings}
          \usepackage{xcolor}
          \usepackage{xurl}
          
          % ========================================
          % 3. Ïù¥ÎØ∏ÏßÄ ÌÅ¨Í∏∞ Î∞è ÏúÑÏπò Ï†úÏñ¥
          % ========================================
          \usepackage{graphicx}
          \usepackage{float}
          
          % Ïù¥ÎØ∏ÏßÄ ÏµúÎåÄ ÌÅ¨Í∏∞ ÏÑ§Ï†ï
          \setkeys{Gin}{width=0.8\textwidth,height=0.5\textheight,keepaspectratio}
          
          % Ïù¥ÎØ∏ÏßÄ ÏúÑÏπò Í≥†Ï†ï
          \let\origfigure\figure
          \let\endorigfigure\endfigure
          \renewenvironment{figure}[1][htbp]{
            \origfigure[H]
            \centering
          }{
            \endorigfigure
          }
          
          % ========================================
          % 4. ÏΩîÎìú Î∏îÎ°ù ÏÑ§Ï†ï
          % ========================================
          \fvset{
            breaklines=true,
            breakanywhere=true,
            breakautoindent=false,
            breaksymbolleft={},
            breaksymbolright={},
            fontsize=\tiny,
            baselinestretch=0.8
          }
          
          \DefineVerbatimEnvironment{Highlighting}{Verbatim}{
            breaklines=true,
            breakanywhere=true,
            breakautoindent=false,
            breaksymbolleft={},
            breaksymbolright={},
            commandchars=\\\{\},
            fontsize=\tiny,
            baselinestretch=0.8
          }
          
          \RecustomVerbatimEnvironment{verbatim}{Verbatim}{
            breaklines=true,
            breakanywhere=true,
            breakautoindent=false,
            breaksymbolleft={},
            breaksymbolright={},
            fontsize=\tiny,
            baselinestretch=0.8
          }
          
          % ========================================
          % 5. Ïù∏ÎùºÏù∏ ÏΩîÎìú Ï§ÑÎ∞îÍøà
          % ========================================
          \def\UrlBreaks{\do\/\do:\do-\do_\do.\do,\do*\do(\do)\do[\do]\do<\do>\do|\do'\do$\do=\do\{\do\}\do;\do"}
          
          \makeatletter
          \let\oldtexttt\texttt
          \renewcommand{\texttt}[1]{%
            \begingroup
            \tiny
            \hyphenchar\font=`\-
            \oldtexttt{%
              \begingroup
              \lccode`~=`.\lowercase{\endgroup\def~}{.\discretionary{}{}{}}%
              \lccode`~=`*\lowercase{\endgroup\def~}{*\discretionary{}{}{}}%
              \lccode`~=`:\lowercase{\endgroup\def~}{:\discretionary{}{}{}}%
              \lccode`~=`_\lowercase{\endgroup\def~}{_\discretionary{}{}{}}%
              \lccode`~=`-\lowercase{\endgroup\def~}{-\discretionary{}{}{}}%
              \lccode`~=`/\lowercase{\endgroup\def~}{/\discretionary{}{}{}}%
              \lccode`~=`(\lowercase{\endgroup\def~}{(\discretionary{}{}{}}%
              \lccode`~=`)\lowercase{\endgroup\def~}{)\discretionary{}{}{}}%
              \lccode`~=`[\lowercase{\endgroup\def~}{[\discretionary{}{}{}}%
              \lccode`~=`]\lowercase{\endgroup\def~}{]\discretionary{}{}{}}%
              \lccode`~=`'\lowercase{\endgroup\def~}{'\discretionary{}{}{}}%
              \lccode`~=`$\lowercase{\endgroup\def~}{\$\discretionary{}{}{}}%
              \lccode`~=`=\lowercase{\endgroup\def~}{=\discretionary{}{}{}}%
              \lccode`~=`,\lowercase{\endgroup\def~}{,\discretionary{}{}{}}%
              \lccode`~=`;\lowercase{\endgroup\def~}{;\discretionary{}{}{}}%
              \lccode`~=`"\lowercase{\endgroup\def~}{"\discretionary{}{}{}}%
              \catcode`.=\active \catcode`*=\active \catcode`:=\active
              \catcode`_=\active \catcode`-=\active \catcode`/=\active
              \catcode`(=\active \catcode`)=\active \catcode`[=\active
              \catcode`]=\active \catcode`'=\active \catcode`$=\active
              \catcode`==\active \catcode`,=\active \catcode`;=\active
              \catcode`"=\active
              \scantokens{#1\noexpand}%
            }%
            \endgroup
          }
          \makeatother
          
          % ========================================
          % 6. ÌéòÏù¥ÏßÄ Î†àÏù¥ÏïÑÏõÉ ÏµúÏ†ÅÌôî
          % ========================================
          \usepackage{microtype}
          \usepackage[hang,flushmargin]{footmisc}
          
          \setlength{\parskip}{0.3\baselineskip}
          \setlength{\parindent}{0pt}
          
          \widowpenalty=10000
          \clubpenalty=10000
          \raggedbottom
          
          \tolerance=9999
          \emergencystretch=3em
          \hyphenpenalty=10000
          \exhyphenpenalty=100
          EOFHEADER
          
          echo "‚úÖ LaTeX header created"
          ls -lh header.tex

      - name: Generate PDF with Pandoc
        run: |
          cd wiki
          echo "üìÑ Generating PDF..."
          fc-cache -fv
          
          pandoc combined.md \
            --pdf-engine=xelatex \
            --listings \
            -V fontsize=9pt \
            -V geometry:margin=1cm \
            -V geometry:top=1.5cm \
            -V geometry:bottom=1.5cm \
            -V linestretch=1.1 \
            -V documentclass=article \
            --toc \
            --toc-depth=3 \
            -H header.tex \
            -o combined.pdf
          
          if [ -f combined.pdf ]; then
            echo "‚úÖ PDF generated successfully"
            ls -lh combined.pdf
          else
            echo "‚ùå PDF generation failed"
            exit 1
          fi

      - name: Commit PDF to repository
        run: |
          mv wiki/combined.pdf Wiki_Ï†ÑÏ≤¥.pdf
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/GiveSeo/Wiki_drag_and_drop.git
          git fetch origin
          git pull origin HEAD --rebase || true
          git add Wiki_Ï†ÑÏ≤¥.pdf
          if ! git diff --staged --quiet; then
            git commit -m "üìÑ Update Wiki PDF"
            git push origin HEAD
            echo "‚úÖ PDF committed and pushed"
          else
            echo "‚ÑπÔ∏è No changes to PDF"
          fi

      - name: Update Home.md with PDF link
        run: |
          cd wiki
          PDF_URL_RAW="https://github.com/GiveSeo/Wiki_drag_and_drop/raw/master/Wiki_Ï†ÑÏ≤¥.pdf"
          PDF_URL_BLOB="https://github.com/GiveSeo/Wiki_drag_and_drop/blob/master/Wiki_Ï†ÑÏ≤¥.pdf"
          HOME_FILE="Home.md"
          
          if grep -q "## üìò PDF Îã§Ïö¥Î°úÎìú" "$HOME_FILE"; then
            sed -i '/## üìò PDF Îã§Ïö¥Î°úÎìú/,/^$/d' "$HOME_FILE"
          fi
          
          echo "" >> "$HOME_FILE"
          echo "---" >> "$HOME_FILE"
          echo "" >> "$HOME_FILE"
          echo "## üìò PDF Îã§Ïö¥Î°úÎìú" >> "$HOME_FILE"
          echo "" >> "$HOME_FILE"
          echo "Ï†ÑÏ≤¥ WikiÎ•º PDFÎ°ú Îã§Ïö¥Î°úÎìúÌï† Ïàò ÏûàÏäµÎãàÎã§:" >> "$HOME_FILE"
          echo "" >> "$HOME_FILE"
          echo "- [üì• PDF Îã§Ïö¥Î°úÎìú (Raw)]($PDF_URL_RAW)" >> "$HOME_FILE"
          echo "- [üëÅÔ∏è GitHubÏóêÏÑú Î≥¥Í∏∞]($PDF_URL_BLOB)" >> "$HOME_FILE"
          echo "" >> "$HOME_FILE"
          
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/GiveSeo/Wiki_drag_and_drop.wiki.git
          git add "$HOME_FILE"
          if ! git diff --staged --quiet; then
            git commit -m "üîó Update PDF download link"
            git push origin HEAD:master
            echo "‚úÖ Home.md updated"
          else
            echo "‚ÑπÔ∏è No changes to Home.md"
          fi
